# .gitlab-ci.yml
#
# canvas-node
#
# pipelines can be triggered manually in the web


stages:
    - test
    - build
    - publish

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.docker-env:                       &docker-env
  image:                           paritytech/ci-linux:production
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - bash --version
    - mkdir -p ${CARGO_TARGET_DIR}
    - sccache -s
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
  dependencies:                    []
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - linux-docker

.test-refs:                   &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

### stage:                         test

test:
  stage:                           test
  <<:                              *docker-env
  script:
    # just temporarily disabled for testing the PR
    - echo cargo test --all

build-linux:
  stage:                           build
  <<:                              *docker-env
  <<:                              *collect-artifacts
  <<:                              *test-refs
  script:
    - cargo build --release
  after_script:
    - mkdir -p ./artifacts/canvas/
    - cp ${CARGO_TARGET_DIR}/release/canvas ./artifacts/canvas/canvas-linux

build-mac:
  stage:                           build
  <<:                              *docker-env
  <<:                              *collect-artifacts
  <<:                              *test-refs
  before_script:
    - unset CARGO_TARGET_DIR
  script:
    - cargo build --release
  after_script:
    - mkdir -p ./artifacts/canvas/
    - cp target/release/canvas ./artifacts/canvas/canvas-mac
  tags:
    - osx

publish:
  stage:                           publish
  <<:                              *docker-env
  <<:                              *test-refs
  needs:
    - job: build-linux
      artifacts: true
    - job: build-mac
      artifacts: true
  script:
    - find /ci-cache/${CI_PROJECT_NAME}/targets/build-mac/release/
    - find /ci-cache/${CI_PROJECT_NAME}/targets/build-linux/release/
    - ls -lh /ci-cache/${CI_PROJECT_NAME}/targets/build-linux/release/canvas
